services:
 eureka1:
  build: ./TSSEurekaServerProfile
  container_name: eureka1
  hostname: eureka1
  environment: 
   # Important for clients to register with eureka
   - eureka.client.serviceUrl.defaultZone=http://eureka2:8761/eureka/  
  networks:
   - tssnet
  ports:
   - "8761:8761"
   
 eureka2:
  build: ./TSSEurekaServerProfile
  container_name: eureka2
  hostname: eureka2
  environment: 
   # Important for clients to register with eureka
   - eureka.client.serviceUrl.defaultZone=http://eureka1:8761/eureka/
  networks:
   - tssnet
  ports:
   - "8762:8761"   

 client1:
  build: ./TSSEurekaServiceClientProfile
  container_name: client1
  environment: 
   # Important for clients to register with eureka
   - eureka.client.serviceUrl.defaultZone=http://eureka1:8761/eureka/,http://eureka2:8761/eureka/
   - eureka.client.instance.preferIpAddress = true
   - spring.application.name = eurekaServiceClientProfile   
  networks:
   - tssnet
  ports:
   - "8081:8080"
 
 client2:
  build: ./TSSEurekaServiceClientProfile
  container_name: client2
  environment: 
   # Important for clients to register with eureka
   - eureka.client.serviceUrl.defaultZone=http://eureka1:8761/eureka/,http://eureka2:8761/eureka/  
   - eureka.client.instance.preferIpAddress = true
   - spring.application.name = eurekaServiceClientProfile   
  networks:
   - tssnet
  ports:
   - "8082:8080"  

 clientreport:
  build: ./TSSEurekaServiceClientReport
  container_name: clientreport
  environment: 
   # Important for clients to register with eureka
   - eureka.client.serviceUrl.defaultZone=http://eureka1:8761/eureka/,http://eureka2:8761/eureka/  
   - eureka.client.instance.preferIpAddress = true
   - spring.application.name = eurekaServiceClient8083Report
  networks:
   - tssnet
  ports:
   - "8083:8080"  


networks:
  tssnet:
    driver: bridge
    
    

